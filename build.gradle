plugins {
    id 'org.springframework.boot' version '2.2.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id "io.freefair.lombok" version "4.1.5"
    id 'java'
}

group = 'org.chimerax'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven {
        name = "GitHubPackages"
        url = 'https://maven.pkg.github.com/chimerax/common-service'
        credentials {
            username = System.getenv('GITHUB_USERNAME')
            password = System.getenv('GITHUB_TOKEN')
        }
    }
}

generateLombokConfig.enabled = false

bootRun {
    jvmArgs = ["-Dspring.output.ansi.enabled=ALWAYS"]
}

ext {
    set('springCloudVersion', "Hoxton.SR1")
    set('springBootAdminVersion', "2.2.1")
}

dependencies {
    // implementation 'de.codecentric:spring-boot-admin-starter-client'
    // implementation 'org.springframework.boot:spring-boot-starter-actuator'
    // implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    // implementation 'org.springframework.cloud:spring-cloud-starter-config'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    compile group: 'org.jsoup', name: 'jsoup', version: '1.12.1'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'

    compile 'com.h2database:h2'
    implementation 'org.chimerax:common-service:1.3.5-RELEASE'

    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

dependencyManagement {
    imports {
        mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}
